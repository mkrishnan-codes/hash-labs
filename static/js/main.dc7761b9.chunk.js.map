{"version":3,"sources":["features/404/NotFound.jsx","common/Loader.jsx","features/weather/WeatherIcon.jsx","features/weather/WeatherWidgets.jsx","features/weather/Weather.jsx","config/openweather.js","features/brandcompare/Brand.jsx","features/brandcompare/HelpModal.jsx","features/brandcompare/brandSlice.js","features/brandcompare/BrandCompare.jsx","router/router-config.js","layout/Footer.jsx","layout/Header.jsx","layout/Main.jsx","layout/AppLayout.jsx","router/Router.jsx","App.js","app/store.js","serviceWorker.js","index.js"],"names":["NotFound","location","useLocation","pathname","Loader","label","Box","sx","flexGrow","p","textAlign","CircularProgress","color","Typography","variant","gutterBottom","WeatherIcon","caseInsensitiveName","name","toLowerCase","search","Cloud","fontSize","Umbrella","AcUnit","WbSunny","WeatherWidgets","sys","weather","main","wind","temp","Grid","container","spacing","item","xs","md","Paper","elevation","component","country","description","List","width","maxWidth","bgcolor","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","feels_like","Opacity","humidity","Air","speed","Weather","useState","weatherData","setweatherData","pos","setPos","loaderLabel","setLoaderLabel","getWeather","a","fetch","latitude","longitude","then","response","json","data","catch","e","console","log","useEffect","navigator","geolocation","getCurrentPosition","position","coords","Brand","id","brand","weightUnits","price","onUpdate","pricePerUnit","sendPayload","useCallback","attr","value","payload","m","TextField","fullWidth","placeholder","onChange","evt","currentTarget","type","contentEditable","BootstrapDialog","styled","Dialog","theme","padding","BootstrapDialogTitle","props","children","onClose","other","DialogTitle","IconButton","aria-label","onClick","right","top","palette","grey","HelpModal","open","handleClose","aria-labelledby","DialogContent","dividers","DialogActions","Button","autoFocus","getBrand","String","fromCharCode","initialState","brandSlice","createSlice","reducers","add","state","length","push","update","w","toFixed","index","findIndex","itm","sort","b","save","str","JSON","stringify","localStorage","setItem","restore","brs","getItem","parse","actions","selectBrands","brands","fabStyle","bottom","BrandCompare","useSelector","dispatch","useDispatch","React","setOpen","handleClickOpen","openSnack","setOpenSnack","doOpenSnack","handleCloseSnack","event","reason","addBrand","sortBrand","map","brnd","lg","Snackbar","autoHideDuration","message","Fab","Sort","routes","path","exact","inner","Footer","style","display","justifyContent","pages","ResponsiveAppBar","anchorElNav","setAnchorElNav","history","useHistory","handleCloseNavMenu","page","AppBar","Container","Toolbar","disableGutters","noWrap","mr","size","aria-controls","aria-haspopup","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","MenuItem","my","Main","Header","AppLayout","RouteWithSubRoutes","route","render","AppRouter","i","createTheme","red","lightBlue","App","ThemeProvider","store","configureStore","reducer","brandSliceReducer","window","hostname","match","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc7761b9.chunk.js","sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst NotFound = () => {\n\tlet location = useLocation();\n\treturn (\n\t\t<div>\n\t\t\t<h3>\n\t\t\t\tPage not found<code>{location.pathname}</code>\n\t\t\t</h3>\n\t\t</div>\n\t);\n}\n\nexport default NotFound;","import { Box, CircularProgress, Typography } from '@mui/material';\nimport React from 'react';\n\nconst Loader = ({ label }) => {\n    return (\n        <Box sx={{ flexGrow: 1, p: 2, textAlign: \"center\" }}>\n            <CircularProgress color=\"primary\" />\n            <Typography variant=\"body1\" gutterBottom>\n                {label}\n            </Typography>\n        </Box>\n    );\n}\n\nexport default Loader;\n","import React from 'react';\nimport { AcUnit, Cloud, Umbrella, WbSunny } from '@mui/icons-material';\n\nconst WeatherIcon = ({ name }) => {\n    const caseInsensitiveName = name.toLowerCase();\n    if (caseInsensitiveName.search(\"cloud\") > -1) {\n        return <Cloud color=\"primary\" fontSize='large' />\n    }\n    if (caseInsensitiveName.search(\"rain\") > -1) {\n        return <Umbrella color=\"primary\" fontSize='large' />\n    }\n    if (caseInsensitiveName.search(\"snow\") > -1) {\n        return <AcUnit color=\"primary\" fontSize='large' />\n    }\n    return <WbSunny color=\"primary\" fontSize='large' />\n}\n\nexport default WeatherIcon;\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { Typography } from '@mui/material';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport { Air, Opacity, WbSunny } from '@mui/icons-material';\nimport WeatherIcon from './WeatherIcon';\n\nconst WeatherWidgets = ({name,sys,weather,main, wind}) => {\n    const temp = main ? `${main.temp}°C` : \"\"\n\n    return (\n        <Box sx={{ flexGrow: 1, p: 4 }}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={4}>\n                    <Paper elevation={3} variant=\"outlined\">\n                        <Box sx={{ flexGrow: 1, p: 2, textAlign: \"center\" }}>\n                            <Typography variant=\"h4\" gutterBottom component=\"div\">\n                                {name},{sys.country}\n                            </Typography>\n                            <Box sx={{ flexGrow: 1, p: 4 }}>\n                                <Typography variant=\"h5\" gutterBottom component=\"div\">\n                                    {weather[0].description}\n                                </Typography>\n                                <WeatherIcon name={weather[0].main} />\n                                <Typography variant=\"h5\" gutterBottom component=\"div\">\n                                    {temp}\n                                </Typography>\n                            </Box>\n                        </Box>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                    <Paper elevation={3} variant=\"outlined\" >\n                        <Box sx={{ flexGrow: 1, p: 2 }}>\n                            <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar>\n                                            <WbSunny />\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={temp} secondary={`Feels like ${main.feels_like}°C`} />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar>\n                                            <Opacity />\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={`${main.humidity}%`} secondary=\"Humidity\" />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar>\n                                            <Air />\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={`${wind.speed}m/s`} secondary=\"Wind\" />\n                                </ListItem>\n                            </List>\n\n                        </Box>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}\n\nexport default WeatherWidgets;\n","import React, { useEffect, useState } from 'react';\nimport { API_KEY } from '../../config/openweather';\n\nimport Loader from '../../common/Loader';\nimport WeatherWidgets from './WeatherWidgets';\n\nconst Weather = () => {\n    const [weatherData, setweatherData] = useState(null);\n    const [pos, setPos] = useState(null);\n    const [loaderLabel, setLoaderLabel] = useState(\"Getting location\");\n    const getLocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                setPos(position.coords);\n            });\n        } else {\n            setLoaderLabel(\"Please allow location to see weather\");\n        }\n    }\n    const getWeather = async () => {\n        return fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${pos.latitude}&lon=${pos.longitude}&appid=${API_KEY}&units=metric`)\n            .then(response => response.json())\n            .then(data => {\n                setweatherData(data);\n            }).catch((e) => console.log(e));\n    }\n    useEffect(() => {\n        getLocation();\n    }, []);\n    useEffect(() => {\n        if (pos) {\n            setLoaderLabel(\"Getting weather\");\n            getWeather();\n        }\n        // eslint-disable-next-line\n    }, [pos]);\n    return pos === null || weatherData === null ? <Loader label={loaderLabel} /> : (\n        <WeatherWidgets {...weatherData}/>\n    );\n}\n\nexport default Weather;\n","export const API_KEY =  \"fd26fa84170da6ba612a200c1f56cf61\";","import { Grid, Paper, TextField } from '@mui/material'\nimport React, { useCallback } from 'react'\nexport default function Brand({ id, brand,\n    weightUnits,\n    price,\n    onUpdate,\n    pricePerUnit\n}) {\n    const sendPayload = useCallback((attr, value) => {\n        const payload = { weightUnits, price, id, pricePerUnit, brand };\n        onUpdate({ ...payload, [attr]: value });\n    }, [weightUnits, price, id, pricePerUnit, onUpdate, brand])\n\n    return (\n\n        <Paper elevation={2} sx={{ p: 4, m: 1 }}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <TextField fullWidth id=\"inpBrand\" label=\"Brand\" placeholder=\"Eg: Unilever\" variant=\"standard\" value={brand} onChange={(evt) => sendPayload('brand', evt.currentTarget.value)} />\n\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField fullWidth type=\"number\" id=\"inpWeightUnits\" label=\"Weight Units\" variant=\"standard\" value={weightUnits} onChange={(evt) => sendPayload('weightUnits', evt.currentTarget.value)} />\n\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField fullWidth type=\"number\" id=\"inpPrice\" label=\"Price\" variant=\"standard\" value={price} onChange={(evt) => sendPayload('price', evt.currentTarget.value)} />\n\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField fullWidth type=\"number\" id=\"inpPricePerUnit\" label=\"Price per unit\" variant=\"filled\" contentEditable={false} value={pricePerUnit} />\n\n                </Grid>\n            </Grid>\n        </Paper >\n\n\n    )\n}\n//  <Stack\n//       component=\"form\"\n//       sx={{\n//         width: '25ch',\n//       }}\n//       spacing={2}\n//       noValidate\n//       autoComplete=\"off\"\n//     >","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Typography from '@mui/material/Typography';\n\nexport const BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuiDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\n\n\nexport const BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nexport default function HelpModal({open, handleClose}) {\n \n  return (\n    <div>\n     \n      <BootstrapDialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         How to use?\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            This can calculate price per unit of a brand and add more brands using add button. It can be usefull while having 2 brands where calculating value for money is difficult while on a super market. Eg: Unilever Product costs 19 for 135 grams and Palmolive costs 27.5 for 175 grams, which one is worthy?\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose}>\n            Close\n          </Button>\n        </DialogActions>\n      </BootstrapDialog>\n    </div>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nconst getBrand = (id) => ({\n    id,\n    brand: String.fromCharCode(97 + id),\n    weightUnits: 0,\n    price: 0,\n    pricePerUnit: ''\n}\n)\nconst initialState = [getBrand(0)];\nconst calc = (w, p) => w !== 0 && p !== 0 ? (p / w).toFixed(2) : \"\";\n\nexport const brandSlice = createSlice({\n    name: 'brands', initialState, reducers: {\n        add: (state) => {\n            state.length < 100 && state.push(getBrand(state.length))\n        },\n        update: (state, { payload }) => {\n            const { weightUnits, id, price, brand } = payload;\n            const pricePerUnit = calc(weightUnits, price);\n            const index = state.findIndex(itm => itm.id === id);\n            state[index] = { id, price, pricePerUnit, weightUnits, brand };\n        },\n        sort: (state) => {\n            state.sort((a, b) => a.pricePerUnit - b.pricePerUnit);\n        },\n        save: (state) => {\n            const str = JSON.stringify(state);\n            localStorage.setItem('brands', str);\n        },\n        restore: (state) => {\n            let brs = localStorage.getItem('brands');\n            if (brs) {\n                brs = JSON.parse(brs)\n                state = brs;\n            }\n        }\n    }\n})\nexport const { add, update, sort } = brandSlice.actions;\nexport const selectBrands = (state) => state.brands;\nexport default brandSlice.reducer;\n","import { Box, Fab, Grid, Snackbar, Typography } from '@mui/material'\nimport React, { useCallback } from 'react'\nimport Brand from './Brand';\nimport AddIcon from '@mui/icons-material/Add';\nimport HelpModal from './HelpModal';\nimport QuestionMarkIcon from '@mui/icons-material/QuestionMark';\nimport { Sort } from '@mui/icons-material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { add, selectBrands, sort, update } from './brandSlice';\n\nconst fabStyle = {\n    position: 'fixed',\n    bottom: 20,\n    right: 16,\n};\n\nfunction BrandCompare() {\n    const brands = useSelector(selectBrands);\n    const dispatch = useDispatch();\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = useCallback(() => {\n        setOpen(true);\n    }, []);\n    const [openSnack, setOpenSnack] = React.useState(false);\n\n    const doOpenSnack = useCallback(() => {\n        setOpenSnack(true);\n    }, [setOpenSnack]);\n\n    const handleCloseSnack = useCallback((event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenSnack(false);\n    }, [setOpenSnack]);\n\n    const handleClose = useCallback(() => {\n        setOpen(false);\n    }, []);\n    const onUpdate = useCallback((payload) => {\n        dispatch(update(payload))\n    }, [dispatch])\n    const addBrand = useCallback(\n        () => {\n            dispatch(add())\n        },\n        [dispatch],\n    )\n    const sortBrand = useCallback(\n        () => {\n            dispatch(sort());\n            doOpenSnack();\n        },\n        [dispatch, doOpenSnack],\n    )\n\n\n    return (\n        <Box sx={{ flexGrow: 1, p: 4, position: 'relative' }}>\n            <Typography variant=\"h5\" gutterBottom component=\"div\">\n                Brand Price comparing tool\n            </Typography>\n            <Grid container spacing={2}>\n                {brands.map((brnd) => <Grid item xs={12} md={4} lg={3} key={brnd.id}> <Brand  {...brnd} onUpdate={onUpdate} /></Grid>)}\n\n            </Grid>\n            <HelpModal open={open} handleClose={handleClose} />\n            <Snackbar\n                open={openSnack}\n                autoHideDuration={3000}\n                onClose={handleCloseSnack}\n                message=\"Sorted (Lower price is on top now!!)\"\n            />\n            <Box sx={{ '& > :not(style)': { m: 1 }, ...fabStyle }}>\n                <Fab color=\"secondary\" aria-label=\"add\" onClick={handleClickOpen}>\n                    <QuestionMarkIcon />\n\n                </Fab>\n                <Fab color=\"primary\" aria-label=\"add\" onClick={sortBrand}>\n                    <Sort />\n                </Fab>\n                <Fab color=\"primary\" aria-label=\"add\" onClick={addBrand}>\n                    <AddIcon />\n                </Fab>\n            </Box>\n        </Box >\n    )\n}\n\nexport default BrandCompare;","// import { Login } from \"../components/Login/Login\";\nimport NotFound from \"../features/404/NotFound\";\n// import Home  from \"../features/home/Home\";\n// import { Mock } from \"../components/Mock/Mock\";\n// import MockInit from \"../components/Mock/MockInit\";\nimport Weather from '../features/weather/Weather';\nimport BrandCompare from \"../features/brandcompare/BrandCompare\"\nexport const routes = [\n\t{\n\t\tpath: \"/\",\n\t\texact: true,\n\t\tinner: true,\n\t\tcomponent: BrandCompare\n\t},\n\t{\n\t\tpath: \"/home\",\n\t\tinner: true,\n\t\tcomponent: BrandCompare,\n\t\t//   routes: [\n\t\t// \t{\n\t\t// \t  path: \"/tacos/bus\",\n\t\t// \t  component: Bus\n\t\t// \t},\n\t\t// \t{\n\t\t// \t  path: \"/tacos/cart\",\n\t\t// \t  component: Cart\n\t\t// \t}\n\t\t//   ]\n\t},\n\t{\n\t\tpath: \"/weather\",\n\t\texact: true,\n\t\tinner: true,\n\t\tcomponent: Weather\n\t},\n\t{\n\t\tpath: \"/brandcompare\",\n\t\texact: true,\n\t\tinner: true,\n\t\tcomponent: BrandCompare\n\t},\n\t{\n\t\tpath: '*',\n\t\tcomponent: NotFound\n\t}\n];","import { Typography } from '@mui/material'\nimport React from 'react'\n// const fabStyle = {\n//     position: 'fixed',\n//     bottom: 5,\n//    width:'100%'\n// };\nexport default function Footer() {\n    return (\n        <div style={{\n            display: 'flex', position: 'fixed',\n            bottom: 0, justifyContent: 'center', width: '100%'\n        }}>\n            <Typography variant=\"overline\"  color={ (theme) => theme.palette.grey[500]}>\n            &#10024; Made in Bengaluru, India with &#128155; and &#9749;\n            </Typography>\n        </div>\n    )\n}\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\n// import Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\n// import Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useHistory } from \"react-router-dom\";\n\nconst pages = [{ name: \"Brand Price Compare\", path: \"/brandcompare\" }, { name: 'Weather', path: \"/weather\" }];\n// const settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\n\nconst ResponsiveAppBar = () => {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  //   const [anchorElUser, setAnchorElUser] = React.useState(null);\n  let history = useHistory();\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  //   const handleOpenUserMenu = (event) => {\n  //     setAnchorElUser(event.currentTarget);\n  //   };\n\n  const handleCloseNavMenu = (page) => {\n    if (page) {\n      history.push(page.path);\n    }\n    setAnchorElNav(null);\n  };\n\n  //   const handleCloseUserMenu = () => {\n  //     setAnchorElUser(null);\n  //   };\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n          >\n            #Labs\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem key={page.name} onClick={() => handleCloseNavMenu(page)}>\n                  <Typography textAlign=\"center\">{page.name}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n          >\n            #Labs\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page) => (\n              <Button\n                key={page.name}\n                onClick={() => handleCloseNavMenu(page)}\n                sx={{ my: 2, color: 'white', display: 'block' }}\n              >\n                {page.name}\n              </Button>\n            ))}\n          </Box>\n\n          {/* <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: '45px' }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {settings.map((setting) => (\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                  <Typography textAlign=\"center\">{setting}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box> */}\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default ResponsiveAppBar;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport Footer from './Footer';\nimport Header from './Header';\nexport const Main = (props) => {\n\treturn (<>\n\t\t<Header />\n\t\t{props.children}\n\t\t<Footer />\n\t</>\n\t)\n}\n","import React from 'react';\nimport { Main } from './Main';\n\nconst AppLayout = (props) => {\n\treturn props.inner ? (\n\t\t<Main>\n\t\t\t{props.children}\n\t\t</Main>\n\t) : <>{props.children}</>;\n}\n\nexport default AppLayout;","import React from 'react'\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { routes } from './router-config';\nimport AppLayout from '../layout/AppLayout';\nconst RouteWithSubRoutes = (route) => {\n\treturn (\n\t\t<AppLayout inner={route.inner}>\n\t\t\t<Route\n\t\t\t\tpath={route.path}\n\t\t\t\trender={props => (\n\t\t\t\t\t// pass the sub-routes down to keep nesting\n\t\t\t\t\t<route.component {...props} routes={route.routes} />\n\t\t\t\t)}\n\t\t\t/>\n\t\t</AppLayout>\n\t);\n}\nexport const AppRouter = () => {\n\treturn (\n\t\t<HashRouter>\n\t\t\t<Switch>\n\t\t\t\t{routes.map((route, i) => (\n\t\t\t\t\t<RouteWithSubRoutes key={i} {...route} />\n\t\t\t\t))}\n\t\t\t</Switch>\n\t\t</HashRouter >\n\t);\n}","import React from 'react';\n// import './App.scss';\nimport { AppRouter } from './router/Router';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport lightBlue from '@mui/material/colors/lightBlue';\nimport red from '@mui/material/colors/red';\nconst theme = createTheme({\n  palette: {\n    primary: red,\n    secondary: lightBlue,\n  }\n});\nconst App = () => {\n  return (\n      <ThemeProvider theme={theme}>\n        <AppRouter />\n      </ThemeProvider>\n  );\n}\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\nimport brandSliceReducer from '../features/brandcompare/brandSlice';\nexport const store = configureStore({\n  reducer: {\n    brands: brandSliceReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}