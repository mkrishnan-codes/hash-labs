{"version":3,"sources":["features/404/NotFound.jsx","common/Loader.jsx","features/weather/WeatherIcon.jsx","features/weather/WeatherWidgets.jsx","features/weather/Weather.jsx","config/openweather.js","features/brandcompare/Brand.jsx","features/brandcompare/BrandCompare.jsx","router/router-config.js","layout/Header.jsx","layout/Main.jsx","layout/AppLayout.jsx","router/Router.jsx","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["NotFound","location","useLocation","pathname","Loader","label","Box","sx","flexGrow","p","textAlign","CircularProgress","color","Typography","variant","gutterBottom","WeatherIcon","caseInsensitiveName","name","toLowerCase","search","Cloud","fontSize","Umbrella","AcUnit","WbSunny","WeatherWidgets","sys","weather","main","wind","temp","Grid","container","spacing","item","xs","md","Paper","elevation","component","country","description","List","width","maxWidth","bgcolor","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","feels_like","Opacity","humidity","Air","speed","Weather","useState","weatherData","setweatherData","pos","setPos","loaderLabel","setLoaderLabel","getWeather","a","fetch","latitude","longitude","then","response","json","data","catch","e","console","log","useEffect","navigator","geolocation","getCurrentPosition","position","coords","Brand","id","brand","weightUnits","price","onUpdate","calculation","useMemo","w","toFixed","noValidate","autoComplete","m","TextField","value","onChange","evt","currentTarget","type","getBrand","String","fromCharCode","pricePerUnit","BrandCompare","brands","setbrands","useCallback","attr","newArr","add","brs","length","map","brnd","Fab","aria-label","onClick","routes","path","exact","inner","pages","ResponsiveAppBar","React","anchorElNav","setAnchorElNav","history","useHistory","handleCloseNavMenu","page","push","AppBar","Container","Toolbar","disableGutters","noWrap","mr","display","IconButton","size","aria-controls","aria-haspopup","event","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","Button","my","Main","props","Header","className","children","AppLayout","RouteWithSubRoutes","route","render","AppRouter","i","theme","createTheme","palette","red","lightBlue","App","ThemeProvider","fetchCount","amount","Promise","resolve","setTimeout","incrementAsync","createAsyncThunk","counterSlice","createSlice","initialState","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","window","hostname","match","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d0cd889.chunk.js","sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst NotFound = () => {\n\tlet location = useLocation();\n\treturn (\n\t\t<div>\n\t\t\t<h3>\n\t\t\t\tPage not found<code>{location.pathname}</code>\n\t\t\t</h3>\n\t\t</div>\n\t);\n}\n\nexport default NotFound;","import { Box, CircularProgress, Typography } from '@mui/material';\nimport React from 'react';\n\nconst Loader = ({ label }) => {\n    return (\n        <Box sx={{ flexGrow: 1, p: 2, textAlign: \"center\" }}>\n            <CircularProgress color=\"primary\" />\n            <Typography variant=\"body1\" gutterBottom>\n                {label}\n            </Typography>\n        </Box>\n    );\n}\n\nexport default Loader;\n","import React from 'react';\nimport { AcUnit, Cloud, Umbrella, WbSunny } from '@mui/icons-material';\n\nconst WeatherIcon = ({ name }) => {\n    const caseInsensitiveName = name.toLowerCase();\n    if (caseInsensitiveName.search(\"cloud\") > -1) {\n        return <Cloud color=\"primary\" fontSize='large' />\n    }\n    if (caseInsensitiveName.search(\"rain\") > -1) {\n        return <Umbrella color=\"primary\" fontSize='large' />\n    }\n    if (caseInsensitiveName.search(\"snow\") > -1) {\n        return <AcUnit color=\"primary\" fontSize='large' />\n    }\n    return <WbSunny color=\"primary\" fontSize='large' />\n}\n\nexport default WeatherIcon;\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { Typography } from '@mui/material';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport { Air, Opacity, WbSunny } from '@mui/icons-material';\nimport WeatherIcon from './WeatherIcon';\n\nconst WeatherWidgets = ({name,sys,weather,main, wind}) => {\n    const temp = main ? `${main.temp}°C` : \"\"\n\n    return (\n        <Box sx={{ flexGrow: 1, p: 4 }}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={4}>\n                    <Paper elevation={3} variant=\"outlined\">\n                        <Box sx={{ flexGrow: 1, p: 2, textAlign: \"center\" }}>\n                            <Typography variant=\"h4\" gutterBottom component=\"div\">\n                                {name},{sys.country}\n                            </Typography>\n                            <Box sx={{ flexGrow: 1, p: 4 }}>\n                                <Typography variant=\"h5\" gutterBottom component=\"div\">\n                                    {weather[0].description}\n                                </Typography>\n                                <WeatherIcon name={weather[0].main} />\n                                <Typography variant=\"h5\" gutterBottom component=\"div\">\n                                    {temp}\n                                </Typography>\n                            </Box>\n                        </Box>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                    <Paper elevation={3} variant=\"outlined\" >\n                        <Box sx={{ flexGrow: 1, p: 2 }}>\n                            <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar>\n                                            <WbSunny />\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={temp} secondary={`Feels like ${main.feels_like}°C`} />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar>\n                                            <Opacity />\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={`${main.humidity}%`} secondary=\"Humidity\" />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar>\n                                            <Air />\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={`${wind.speed}m/s`} secondary=\"Wind\" />\n                                </ListItem>\n                            </List>\n\n                        </Box>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}\n\nexport default WeatherWidgets;\n","import React, { useEffect, useState } from 'react';\nimport { API_KEY } from '../../config/openweather';\n\nimport Loader from '../../common/Loader';\nimport WeatherWidgets from './WeatherWidgets';\n\nconst Weather = () => {\n    const [weatherData, setweatherData] = useState(null);\n    const [pos, setPos] = useState(null);\n    const [loaderLabel, setLoaderLabel] = useState(\"Getting location\");\n    const getLocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                setPos(position.coords);\n            });\n        } else {\n            setLoaderLabel(\"Please allow location to see weather\");\n        }\n    }\n    const getWeather = async () => {\n        return fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${pos.latitude}&lon=${pos.longitude}&appid=${API_KEY}&units=metric`)\n            .then(response => response.json())\n            .then(data => {\n                setweatherData(data);\n            }).catch((e) => console.log(e));\n    }\n    useEffect(() => {\n        getLocation();\n    }, []);\n    useEffect(() => {\n        if (pos) {\n            setLoaderLabel(\"Getting weather\");\n            getWeather();\n        }\n        // eslint-disable-next-line\n    }, [pos]);\n    return pos === null || weatherData === null ? <Loader label={loaderLabel} /> : (\n        <WeatherWidgets {...weatherData}/>\n    );\n}\n\nexport default Weather;\n","export const API_KEY =  \"fd26fa84170da6ba612a200c1f56cf61\";","import { Box, Paper, TextField } from '@mui/material'\nimport React, { useMemo } from 'react'\nconst calc = (w, p) => p !== 0 ? (w / p).toFixed(2) : \"\";\nexport default function Brand({ id, brand,\n    weightUnits,\n    price,\n    onUpdate\n}) {\n    const calculation = useMemo(() => calc(weightUnits, price), [weightUnits, price]);\n\n\n\n    return (\n\n        <Box\n            component=\"form\"\n            noValidate\n            autoComplete=\"off\"\n        >\n            <Paper elevation={2} sx={{ p: 4, m: 1 }}>\n                    <TextField id=\"inpBrand\" label=\"Brand\" variant=\"standard\" value={brand} onChange={(evt) => onUpdate('brand', id, evt.currentTarget.value)} />\n                <div>\n                    <TextField type=\"number\" id=\"inpWeightUnits\" label=\"Weight Units\" variant=\"standard\" value={weightUnits} onChange={(evt) => onUpdate('weightUnits', id, evt.currentTarget.value)} />\n                    <TextField type=\"number\" id=\"inpPrice\" label=\"Price\" variant=\"standard\" value={price} onChange={(evt) => onUpdate('price', id, evt.currentTarget.value)} />\n                </div>\n                <TextField type=\"number\" id=\"inpPricePerUnit\" label=\"Price per unit\" variant=\"standard\" value={calculation} />\n            </Paper >\n        </Box>\n    )\n}\n","import { Box, Fab } from '@mui/material'\nimport React, { useCallback, useState } from 'react'\nimport Brand from './Brand';\nimport AddIcon from '@mui/icons-material/Add';\nconst getBrand = (id) => ({\n    id,\n    brand: String.fromCharCode(97 + id),\n    weightUnits: 0,\n    price: 0,\n    pricePerUnit: 0\n}\n)\nfunction BrandCompare() {\n    const [brands, setbrands] = useState([getBrand(0)]);\n    const onUpdate = useCallback((attr, id, value) => {\n        let newArr = [...brands];\n        newArr[id] = { ...newArr[id], [attr]: value }\n        setbrands(newArr);\n    }, [brands])\n    const add = useCallback(\n        () => {\n            const brs = [...brands, getBrand(brands.length)];\n            console.log(brs,\"brs\");\n            setbrands(brs);\n        },\n        [brands],\n    )\n\n    return (\n        <Box sx={{ flexGrow: 1, p: 4 }}>\n        \n                {brands.map((brnd) => <Brand key={brnd.id} {...brnd} onUpdate={onUpdate} />)}\n     \n            <Box sx={{ '& > :not(style)': { m: 1 } }}>\n                <Fab color=\"primary\" aria-label=\"add\" onClick={add}>\n                    <AddIcon />\n                </Fab>\n\n            </Box>\n        </Box>\n    )\n}\n\nexport default BrandCompare;","// import { Login } from \"../components/Login/Login\";\nimport NotFound from \"../features/404/NotFound\";\n// import Home  from \"../features/home/Home\";\n// import { Mock } from \"../components/Mock/Mock\";\n// import MockInit from \"../components/Mock/MockInit\";\nimport Weather from '../features/weather/Weather';\nimport BrandCompare from \"../features/brandcompare/BrandCompare\"\nexport const routes = [\n\t{\n\t\tpath: \"/\",\n\t\texact: true,\n\t\tinner: true,\n\t\tcomponent: BrandCompare\n\t},\n\t{\n\t\tpath: \"/home\",\n\t\tinner: true,\n\t\tcomponent: BrandCompare,\n\t\t//   routes: [\n\t\t// \t{\n\t\t// \t  path: \"/tacos/bus\",\n\t\t// \t  component: Bus\n\t\t// \t},\n\t\t// \t{\n\t\t// \t  path: \"/tacos/cart\",\n\t\t// \t  component: Cart\n\t\t// \t}\n\t\t//   ]\n\t},\n\t{\n\t\tpath: \"/weather\",\n\t\texact: true,\n\t\tinner: true,\n\t\tcomponent: Weather\n\t},\n\t{\n\t\tpath: \"/brandcompare\",\n\t\texact: true,\n\t\tinner: true,\n\t\tcomponent: BrandCompare\n\t},\n\t{\n\t\tpath: '*',\n\t\tcomponent: NotFound\n\t}\n];","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\n// import Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\n// import Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useHistory } from \"react-router-dom\";\n\nconst pages = [{ name: \"Brand Price Compare\", path: \"/brandcompare\" }, { name: 'Weather', path: \"/weather\" }];\n// const settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\n\nconst ResponsiveAppBar = () => {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  //   const [anchorElUser, setAnchorElUser] = React.useState(null);\n  let history = useHistory();\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  //   const handleOpenUserMenu = (event) => {\n  //     setAnchorElUser(event.currentTarget);\n  //   };\n\n  const handleCloseNavMenu = (page) => {\n    if (page) {\n      history.push(page.path);\n    }\n    setAnchorElNav(null);\n  };\n\n  //   const handleCloseUserMenu = () => {\n  //     setAnchorElUser(null);\n  //   };\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n          >\n            #Labs\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem key={page.name} onClick={() => handleCloseNavMenu(page)}>\n                  <Typography textAlign=\"center\">{page.name}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n          >\n            #Labs\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page) => (\n              <Button\n                key={page.name}\n                onClick={() => handleCloseNavMenu(page)}\n                sx={{ my: 2, color: 'white', display: 'block' }}\n              >\n                {page.name}\n              </Button>\n            ))}\n          </Box>\n\n          {/* <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: '45px' }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {settings.map((setting) => (\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                  <Typography textAlign=\"center\">{setting}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box> */}\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default ResponsiveAppBar;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n// import { Sidebar } from '../Sidebar/Sidebar';\nimport Header from './Header';\n// import './main.scss';\nexport const Main = (props) => {\n\t// const [open, setopen] = useState(false);\n\t// const toggle = () => {\n\t// \tsetopen(!open)\n\t// }\n\treturn (<>\n\t\t<Header/>\n\t\t{/* <Sidebar open={open} onClose={toggle} /> */}\n\t\t<div className={`inner-page open`}>\n\t\t\t{props.children}\n\t\t</div>\n\t</>\n\t)\n}\n","import React from 'react';\nimport { Main } from './Main';\n\nconst AppLayout = (props) => {\nconsole.log(\"render layout\", props.inner);\n\treturn props.inner ? (\n\t\t<Main>\n\t\t\t{props.children}\n\t\t</Main>\n\t) : <>{props.children}</>;\n}\n\nexport default AppLayout;","import React from 'react'\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { routes } from './router-config';\nimport AppLayout from '../layout/AppLayout';\nconst RouteWithSubRoutes = (route) => {\n\tconsole.log(route,\"rout\");\n\treturn (\n\t\t<AppLayout inner={route.inner}>\n\t\t\t<Route\n\t\t\t\tpath={route.path}\n\t\t\t\trender={props => (\n\t\t\t\t\t// pass the sub-routes down to keep nesting\n\t\t\t\t\t<route.component {...props} routes={route.routes} />\n\t\t\t\t)}\n\t\t\t/>\n\t\t</AppLayout>\n\t);\n}\nexport const AppRouter = () => {\n\treturn (\n\t\t<HashRouter>\n\t\t\t<Switch>\n\t\t\t\t{routes.map((route, i) => (\n\t\t\t\t\t<RouteWithSubRoutes key={i} {...route} />\n\t\t\t\t))}\n\t\t\t</Switch>\n\t\t</HashRouter >\n\t);\n}","import React from 'react';\n// import './App.scss';\nimport { AppRouter } from './router/Router';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport lightBlue from '@mui/material/colors/lightBlue';\nimport red from '@mui/material/colors/red';\nconst theme = createTheme({\n  palette: {\n    primary: red,\n    secondary: lightBlue,\n  }\n});\nconst App = () => {\n  return (\n      <ThemeProvider theme={theme}>\n        <AppRouter />\n      </ThemeProvider>\n  );\n}\n\nexport default App;","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}