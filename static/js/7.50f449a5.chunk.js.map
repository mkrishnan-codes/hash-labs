{"version":3,"sources":["common/Loader.jsx","features/weather/WeatherIcon.jsx","features/weather/WeatherWidgets.jsx","features/weather/Weather.jsx","config/openweather.js"],"names":["Loader","label","Box","sx","flexGrow","p","textAlign","CircularProgress","color","Typography","variant","gutterBottom","WeatherIcon","caseInsensitiveName","name","toLowerCase","search","Cloud","fontSize","Umbrella","AcUnit","WbSunny","WeatherWidgets","sys","weather","main","wind","temp","Grid","container","spacing","item","xs","md","Paper","elevation","component","country","description","List","width","maxWidth","bgcolor","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","feels_like","Opacity","humidity","Air","speed","Weather","useState","weatherData","setweatherData","pos","setPos","loaderLabel","setLoaderLabel","getWeather","a","fetch","latitude","longitude","then","response","json","data","catch","e","console","log","useEffect","navigator","geolocation","getCurrentPosition","position","coords"],"mappings":"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","file":"static/js/7.50f449a5.chunk.js","sourcesContent":["import { Box, CircularProgress, Typography } from '@mui/material';\nimport React from 'react';\n\nconst Loader = ({ label }) => {\n    return (\n        <Box sx={{ flexGrow: 1, p: 2, textAlign: \"center\" }}>\n            <CircularProgress color=\"primary\" />\n            <Typography variant=\"body1\" gutterBottom>\n                {label}\n            </Typography>\n        </Box>\n    );\n}\n\nexport default Loader;\n","import React from 'react';\nimport { AcUnit, Cloud, Umbrella, WbSunny } from '@mui/icons-material';\n\nconst WeatherIcon = ({ name }) => {\n    const caseInsensitiveName = name.toLowerCase();\n    if (caseInsensitiveName.search(\"cloud\") > -1) {\n        return <Cloud color=\"primary\" fontSize='large' />\n    }\n    if (caseInsensitiveName.search(\"rain\") > -1) {\n        return <Umbrella color=\"primary\" fontSize='large' />\n    }\n    if (caseInsensitiveName.search(\"snow\") > -1) {\n        return <AcUnit color=\"primary\" fontSize='large' />\n    }\n    return <WbSunny color=\"primary\" fontSize='large' />\n}\n\nexport default WeatherIcon;\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { Typography } from '@mui/material';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport { Air, Opacity, WbSunny } from '@mui/icons-material';\nimport WeatherIcon from './WeatherIcon';\n\nconst WeatherWidgets = ({name,sys,weather,main, wind}) => {\n    const temp = main ? `${main.temp}°C` : \"\"\n\n    return (\n        <Box sx={{ flexGrow: 1, p: 4 }}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={4}>\n                    <Paper elevation={3} variant=\"outlined\">\n                        <Box sx={{ flexGrow: 1, p: 2, textAlign: \"center\" }}>\n                            <Typography variant=\"h4\" gutterBottom component=\"div\">\n                                {name},{sys.country}\n                            </Typography>\n                            <Box sx={{ flexGrow: 1, p: 4 }}>\n                                <Typography variant=\"h5\" gutterBottom component=\"div\">\n                                    {weather[0].description}\n                                </Typography>\n                                <WeatherIcon name={weather[0].main} />\n                                <Typography variant=\"h5\" gutterBottom component=\"div\">\n                                    {temp}\n                                </Typography>\n                            </Box>\n                        </Box>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                    <Paper elevation={3} variant=\"outlined\" >\n                        <Box sx={{ flexGrow: 1, p: 2 }}>\n                            <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar>\n                                            <WbSunny />\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={temp} secondary={`Feels like ${main.feels_like}°C`} />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar>\n                                            <Opacity />\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={`${main.humidity}%`} secondary=\"Humidity\" />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar>\n                                            <Air />\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={`${wind.speed}m/s`} secondary=\"Wind\" />\n                                </ListItem>\n                            </List>\n\n                        </Box>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}\n\nexport default WeatherWidgets;\n","import React, { useEffect, useState } from 'react';\nimport { API_KEY } from '../../config/openweather';\n\nimport Loader from '../../common/Loader';\nimport WeatherWidgets from './WeatherWidgets';\n\nconst Weather = () => {\n    const [weatherData, setweatherData] = useState(null);\n    const [pos, setPos] = useState(null);\n    const [loaderLabel, setLoaderLabel] = useState(\"Getting location\");\n    const getLocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                setPos(position.coords);\n            });\n        } else {\n            setLoaderLabel(\"Please allow location to see weather\");\n        }\n    }\n    const getWeather = async () => {\n        return fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${pos.latitude}&lon=${pos.longitude}&appid=${API_KEY}&units=metric`)\n            .then(response => response.json())\n            .then(data => {\n                setweatherData(data);\n            }).catch((e) => console.log(e));\n    }\n    useEffect(() => {\n        getLocation();\n    }, []);\n    useEffect(() => {\n        if (pos) {\n            setLoaderLabel(\"Getting weather\");\n            getWeather();\n        }\n        // eslint-disable-next-line\n    }, [pos]);\n    return pos === null || weatherData === null ? <Loader label={loaderLabel} /> : (\n        <WeatherWidgets {...weatherData}/>\n    );\n}\n\nexport default Weather;\n","export const API_KEY =  \"fd26fa84170da6ba612a200c1f56cf61\";"],"sourceRoot":""}