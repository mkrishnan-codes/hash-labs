{"version":3,"sources":["features/404/NotFound.jsx","router/router-config.js","layout/Footer.jsx","layout/Header.jsx","layout/Main.jsx","layout/AppLayout.jsx","router/Router.jsx","App.js","app/store.js","serviceWorker.js","index.js","features/brandcompare/brandSlice.js"],"names":["NotFound","location","useLocation","pathname","Weather","lazy","BrandCompare","routes","path","exact","inner","component","Footer","style","display","position","bottom","justifyContent","width","Typography","variant","color","theme","palette","grey","pages","name","ResponsiveAppBar","React","anchorElNav","setAnchorElNav","history","useHistory","handleCloseNavMenu","page","push","AppBar","Container","maxWidth","Toolbar","disableGutters","noWrap","sx","mr","xs","md","Box","flexGrow","IconButton","size","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","MenuItem","textAlign","Button","my","Main","props","Header","children","AppLayout","Loader","LinearProgress","RouteWithSubRoutes","route","fallback","render","AppRouter","i","createTheme","primary","lightBlue","secondary","deepOrange","App","ThemeProvider","store","configureStore","reducer","brands","brandSliceReducer","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","getBrand","brand","String","fromCharCode","weightUnits","price","pricePerUnit","initialState","brandSlice","createSlice","reducers","add","state","length","update","w","p","payload","toFixed","index","findIndex","itm","sort","a","b","save","str","JSON","stringify","localStorage","setItem","restore","brs","getItem","parse","actions","selectBrands"],"mappings":"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","file":"static/js/main.37bf3460.chunk.js","sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst NotFound = () => {\n\tlet location = useLocation();\n\treturn (\n\t\t<div>\n\t\t\t<h3>\n\t\t\t\tPage not found<code>{location.pathname}</code>\n\t\t\t</h3>\n\t\t</div>\n\t);\n}\n\nexport default NotFound;","import { lazy } from \"react\";\n\nimport NotFound from \"../features/404/NotFound\";\n\nconst Weather = lazy(() => import(\"../features/weather/Weather\"));\nconst BrandCompare = lazy(() =>\n  import(\"../features/brandcompare/BrandCompare\")\n);\nconst Notes = lazy(() => import(\"../features/notes/Notes\"));\n\nexport const routes = [\n  {\n    path: \"/\",\n    exact: true,\n    inner: true,\n    component: BrandCompare,\n  },\n  {\n    path: \"/home\",\n    inner: true,\n    component: BrandCompare,\n    //   routes: [\n    // \t{\n    // \t  path: \"/tacos/bus\",\n    // \t  component: Bus\n    // \t},\n    // \t{\n    // \t  path: \"/tacos/cart\",\n    // \t  component: Cart\n    // \t}\n    //   ]\n  },\n  {\n    path: \"/weather\",\n    exact: true,\n    inner: true,\n    component: Weather,\n  },\n  {\n    path: \"/brandcompare\",\n    exact: true,\n    inner: true,\n    component: BrandCompare,\n  },\n  {\n    path: \"/notes\",\n    exact: true,\n    inner: true,\n    component: Notes,\n  },\n  {\n    path: \"*\",\n    component: NotFound,\n  },\n];\n","import { Typography } from '@mui/material'\nimport React from 'react'\n// const fabStyle = {\n//     position: 'fixed',\n//     bottom: 5,\n//    width:'100%'\n// };\nexport default function Footer() {\n    return (\n        <div style={{\n            display: 'flex', position: 'fixed',\n            bottom: 0, justifyContent: 'center', width: '100%'\n        }}>\n            <Typography variant=\"overline\"  color={ (theme) => theme.palette.grey[500]}>\n            &#10024; Made in Bengaluru, India with &#128155; and &#9749;\n            </Typography>\n        </div>\n    )\n}\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\n// import Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\n// import Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useHistory } from \"react-router-dom\";\n\nconst pages = [{ name: \"Brand Price Compare\", path: \"/brandcompare\" }, { name: 'Weather', path: \"/weather\" },{ name: 'Notes', path: \"/notes\" }];\n\nconst ResponsiveAppBar = () => {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  let history = useHistory();\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n \n  const handleCloseNavMenu = (page) => {\n    if (page) {\n      history.push(page.path);\n    }\n    setAnchorElNav(null);\n  };\n\n \n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n          >\n            #Labs\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem key={page.name} onClick={() => handleCloseNavMenu(page)}>\n                  <Typography textAlign=\"center\">{page.name}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n          >\n            #Labs\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page) => (\n              <Button\n                key={page.name}\n                onClick={() => handleCloseNavMenu(page)}\n                sx={{ my: 2, color: 'white', display: 'block' }}\n              >\n                {page.name}\n              </Button>\n            ))}\n          </Box>\n\n          {/* <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: '45px' }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {settings.map((setting) => (\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                  <Typography textAlign=\"center\">{setting}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box> */}\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default ResponsiveAppBar;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport Footer from './Footer';\nimport Header from './Header';\nexport const Main = (props) => {\n\treturn (<>\n\t\t<Header />\n\t\t{props.children}\n\t\t<Footer />\n\t</>\n\t)\n}\n","import React from 'react';\nimport { Main } from './Main';\n\nconst AppLayout = (props) => {\n\treturn props.inner ? (\n\t\t<Main>\n\t\t\t{props.children}\n\t\t</Main>\n\t) : <>{props.children}</>;\n}\n\nexport default AppLayout;","import React, { Suspense } from 'react'\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { routes } from './router-config';\nimport AppLayout from '../layout/AppLayout';\nimport { Box, LinearProgress } from '@mui/material';\n\nconst Loader = ()=>{\n\treturn <Box sx={{ width: '100%' }}>\n\t<LinearProgress />\n  </Box>\n}\n\nconst RouteWithSubRoutes = (route) => {\n\treturn (\n\t\t<AppLayout inner={route.inner}>\n\t\t\t<Suspense fallback={<Loader/>}>\n\t\t\t<Route\n\t\t\t\tpath={route.path}\n\t\t\t\trender={props => (\n\t\t\t\t\t// pass the sub-routes down to keep nesting\n\t\t\t\t\t<route.component {...props} routes={route.routes} />\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t</Suspense>\n\t\t</AppLayout>\n\t);\n}\nexport const AppRouter = () => {\n\treturn (\n\t\t<HashRouter>\n\t\t\t<Switch>\n\t\t\t\t{routes.map((route, i) => (\n\t\t\t\t\t<RouteWithSubRoutes key={i} {...route} />\n\t\t\t\t))}\n\t\t\t</Switch>\n\t\t</HashRouter >\n\t);\n}","import React from \"react\";\n// import './App.scss';\nimport { AppRouter } from \"./router/Router\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport lightBlue from \"@mui/material/colors/lightBlue\";\nimport deepOrange from \"@mui/material/colors/deepOrange\";\nconst theme = createTheme({\n  palette: {\n    primary: lightBlue,\n    secondary: deepOrange,\n  },\n});\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <AppRouter />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport brandSliceReducer from '../features/brandcompare/brandSlice';\nexport const store = configureStore({\n  reducer: {\n    brands: brandSliceReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createSlice } from \"@reduxjs/toolkit\";\nconst getBrand = (id) => ({\n    id,\n    brand: String.fromCharCode(97 + id),\n    weightUnits: 0,\n    price: 0,\n    pricePerUnit: ''\n}\n)\nconst initialState = [getBrand(0)];\nconst calc = (w, p) => w !== 0 && p !== 0 ? (p / w).toFixed(2) : \"\";\n\nexport const brandSlice = createSlice({\n    name: 'brands', initialState, reducers: {\n        add: (state) => {\n            state.length < 100 && state.push(getBrand(state.length))\n        },\n        update: (state, { payload }) => {\n            const { weightUnits, id, price, brand } = payload;\n            const pricePerUnit = calc(weightUnits, price);\n            const index = state.findIndex(itm => itm.id === id);\n            state[index] = { id, price, pricePerUnit, weightUnits, brand };\n        },\n        sort: (state) => {\n            state.sort((a, b) => a.pricePerUnit - b.pricePerUnit);\n        },\n        save: (state) => {\n            const str = JSON.stringify(state);\n            localStorage.setItem('brands', str);\n        },\n        restore: (state) => {\n            let brs = localStorage.getItem('brands');\n            if (brs) {\n                brs = JSON.parse(brs)\n                state = brs;\n            }\n        }\n    }\n})\nexport const { add, update, sort } = brandSlice.actions;\nexport const selectBrands = (state) => state.brands;\nexport default brandSlice.reducer;\n"],"sourceRoot":""}