{"version":3,"sources":["features/brandcompare/Brand.jsx","features/brandcompare/HelpModal.jsx","utils/analytics.js","features/brandcompare/BrandCompare.jsx"],"names":["Brand","id","brand","weightUnits","price","onUpdate","pricePerUnit","sendPayload","useCallback","attr","value","payload","Paper","elevation","sx","p","m","Grid","container","spacing","item","xs","TextField","fullWidth","label","placeholder","variant","onChange","evt","currentTarget","type","contentEditable","BootstrapDialog","styled","Dialog","theme","padding","BootstrapDialogTitle","props","children","onClose","other","DialogTitle","IconButton","aria-label","onClick","position","right","top","color","palette","grey","HelpModal","open","handleClose","aria-labelledby","DialogContent","dividers","Typography","gutterBottom","DialogActions","Button","autoFocus","Analytics","data","window","dataLayer","push","environment","this","ENV","console","log","process","fabStyle","bottom","BrandCompare","brands","useSelector","selectBrands","dispatch","useDispatch","React","useState","setOpen","handleClickOpen","PUSH","event","openSnack","setOpenSnack","doOpenSnack","handleCloseSnack","reason","update","addBrand","add","sortBrand","sort","Box","flexGrow","component","map","brnd","md","lg","Snackbar","autoHideDuration","message","Fab","Sort"],"mappings":"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","file":"static/js/6.413e915a.chunk.js","sourcesContent":["import { Grid, Paper, TextField } from '@mui/material'\nimport React, { useCallback } from 'react'\nexport default function Brand({ id, brand,\n    weightUnits,\n    price,\n    onUpdate,\n    pricePerUnit\n}) {\n    const sendPayload = useCallback((attr, value) => {\n        const payload = { weightUnits, price, id, pricePerUnit, brand };\n        onUpdate({ ...payload, [attr]: value });\n    }, [weightUnits, price, id, pricePerUnit, onUpdate, brand])\n\n    return (\n\n        <Paper elevation={2} sx={{ p: 4, m: 1 }}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <TextField fullWidth id=\"inpBrand\" label=\"Brand\" placeholder=\"Eg: Unilever\" variant=\"standard\" value={brand} onChange={(evt) => sendPayload('brand', evt.currentTarget.value)} />\n\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField fullWidth type=\"number\" id=\"inpWeightUnits\" label=\"Weight Units\" variant=\"standard\" value={weightUnits} onChange={(evt) => sendPayload('weightUnits', evt.currentTarget.value)} />\n\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField fullWidth type=\"number\" id=\"inpPrice\" label=\"Price\" variant=\"standard\" value={price} onChange={(evt) => sendPayload('price', evt.currentTarget.value)} />\n\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField fullWidth type=\"number\" id=\"inpPricePerUnit\" label=\"Price per unit\" variant=\"filled\" contentEditable={false} value={pricePerUnit} />\n\n                </Grid>\n            </Grid>\n        </Paper >\n\n\n    )\n}\n//  <Stack\n//       component=\"form\"\n//       sx={{\n//         width: '25ch',\n//       }}\n//       spacing={2}\n//       noValidate\n//       autoComplete=\"off\"\n//     >","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Typography from '@mui/material/Typography';\n\nexport const BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuiDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\n\n\nexport const BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nexport default function HelpModal({open, handleClose}) {\n \n  return (\n    <div>\n     \n      <BootstrapDialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         How to use?\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            This can calculate price per unit of a brand and add more brands using add button. It can be usefull while having 2 brands where calculating value for money is difficult while on a super market. Eg: Unilever Product costs 19 for 135 grams and Palmolive costs 27.5 for 175 grams, which one is worthy?\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose}>\n            Close\n          </Button>\n        </DialogActions>\n      </BootstrapDialog>\n    </div>\n  );\n}\n","export class Analytics {\n    static ENV = process.env.NODE_ENV\n    static PUSH(data) {\n        if (window.dataLayer) {\n            window.dataLayer.push({ ...data, environment: this.ENV });\n        } else {\n            console.log(\"No datalayer configured\")\n        }\n    }\n}","import { Box, Fab, Grid, Snackbar, Typography } from '@mui/material'\nimport React, { useCallback } from 'react'\nimport Brand from './Brand';\nimport AddIcon from '@mui/icons-material/Add';\nimport HelpModal from './HelpModal';\nimport QuestionMarkIcon from '@mui/icons-material/QuestionMark';\nimport { Sort } from '@mui/icons-material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { add, selectBrands, sort, update } from './brandSlice';\nimport { Analytics } from '../../utils/analytics';\n\nconst fabStyle = {\n    position: 'fixed',\n    bottom: 20,\n    right: 16,\n};\n\nfunction BrandCompare() {\n    const brands = useSelector(selectBrands);\n    const dispatch = useDispatch();\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = useCallback(() => {\n        setOpen(true);\n        Analytics.PUSH({ event: 'help_open' })\n    }, []);\n    const [openSnack, setOpenSnack] = React.useState(false);\n\n    const doOpenSnack = useCallback(() => {\n        setOpenSnack(true);\n    }, [setOpenSnack]);\n\n    const handleCloseSnack = useCallback((event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenSnack(false);\n    }, [setOpenSnack]);\n\n    const handleClose = useCallback(() => {\n        setOpen(false);\n    }, []);\n    const onUpdate = useCallback((payload) => {\n        dispatch(update(payload))\n    }, [dispatch])\n    const addBrand = useCallback(\n        () => {\n            dispatch(add())\n            Analytics.PUSH({ event: 'add_brands' })\n        },\n        [dispatch],\n    )\n    const sortBrand = useCallback(\n        () => {\n            dispatch(sort());\n            Analytics.PUSH({ event: 'sort_brands', brands })\n            doOpenSnack();\n        },\n        [dispatch, doOpenSnack, brands],\n    )\n\n\n    return (\n        <Box sx={{ flexGrow: 1, p: 4, position: 'relative' }}>\n            <Typography variant=\"h5\" gutterBottom component=\"div\">\n                Brand Price comparing tool\n            </Typography>\n            <Grid container spacing={2}>\n                {brands.map((brnd) => <Grid item xs={12} md={4} lg={3} key={brnd.id}> <Brand  {...brnd} onUpdate={onUpdate} /></Grid>)}\n\n            </Grid>\n            <HelpModal open={open} handleClose={handleClose} />\n            <Snackbar\n                open={openSnack}\n                autoHideDuration={3000}\n                onClose={handleCloseSnack}\n                message=\"Sorted (Lower price is on top now!!)\"\n            />\n            <Box sx={{ '& > :not(style)': { m: 1 }, ...fabStyle }}>\n                <Fab color=\"secondary\" aria-label=\"add\" onClick={handleClickOpen}>\n                    <QuestionMarkIcon />\n\n                </Fab>\n                <Fab color=\"primary\" aria-label=\"add\" onClick={sortBrand}>\n                    <Sort />\n                </Fab>\n                <Fab color=\"primary\" aria-label=\"add\" onClick={addBrand}>\n                    <AddIcon />\n                </Fab>\n            </Box>\n        </Box >\n    )\n}\n\nexport default BrandCompare;"],"sourceRoot":""}