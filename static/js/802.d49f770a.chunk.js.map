{"version":3,"file":"static/js/802.d49f770a.chunk.js","mappings":"oPAcA,EAXe,SAAH,GAAmB,IAAbA,EAAK,EAALA,MACd,OACI,UAACC,EAAA,EAAG,CAACC,GAAI,CAAEC,SAAU,EAAGC,EAAG,EAAGC,UAAW,UAAW,WAChD,SAACC,EAAA,EAAgB,CAACC,MAAM,aACxB,SAACC,EAAA,EAAU,CAACC,QAAQ,QAAQC,cAAY,WACnCV,MAIjB,E,8HCKA,EAdoB,SAAH,GAAkB,IACzBW,EADiB,EAAJC,KACcC,cACjC,OAAIF,EAAoBG,OAAO,UAAY,GAChC,SAACC,EAAA,EAAK,CAACR,MAAM,UAAUS,SAAS,UAEvCL,EAAoBG,OAAO,SAAW,GAC/B,SAACG,EAAA,EAAQ,CAACV,MAAM,UAAUS,SAAS,UAE1CL,EAAoBG,OAAO,SAAW,GAC/B,SAACI,EAAA,EAAM,CAACX,MAAM,UAAUS,SAAS,WAErC,SAACG,EAAA,EAAO,CAACZ,MAAM,UAAUS,SAAS,SAC7C,EC4DA,EA9DuB,SAAH,GAAuC,IAAlCJ,EAAI,EAAJA,KAAKQ,EAAG,EAAHA,IAAIC,EAAO,EAAPA,QAAQC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KACtCC,EAAOF,EAAI,UAAMA,EAAKE,KAAI,SAAO,GAEvC,OACI,SAACvB,EAAA,EAAG,CAACC,GAAI,CAAEC,SAAU,EAAGC,EAAG,GAAI,UAC3B,UAACqB,EAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE,WACvB,SAACF,EAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAE,UACrB,SAACC,EAAA,EAAK,CAACC,UAAW,EAAGvB,QAAQ,WAAU,UACnC,UAACR,EAAA,EAAG,CAACC,GAAI,CAAEC,SAAU,EAAGC,EAAG,EAAGC,UAAW,UAAW,WAChD,UAACG,EAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAACuB,UAAU,MAAK,UAChDrB,EAAI,IAAGQ,EAAIc,YAEhB,UAACjC,EAAA,EAAG,CAACC,GAAI,CAAEC,SAAU,EAAGC,EAAG,GAAI,WAC3B,SAACI,EAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAACuB,UAAU,MAAK,SAChDZ,EAAQ,GAAGc,eAEhB,SAAC,EAAW,CAACvB,KAAMS,EAAQ,GAAGC,QAC9B,SAACd,EAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAACuB,UAAU,MAAK,SAChDT,eAMrB,SAACC,EAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAE,UACrB,SAACC,EAAA,EAAK,CAACC,UAAW,EAAGvB,QAAQ,WAAU,UACnC,SAACR,EAAA,EAAG,CAACC,GAAI,CAAEC,SAAU,EAAGC,EAAG,GAAI,UAC3B,UAACgC,EAAA,EAAI,CAAClC,GAAI,CAAEmC,MAAO,OAAQC,SAAU,IAAKC,QAAS,oBAAqB,WACpE,UAACC,EAAA,GAAQ,YACL,SAACC,EAAA,EAAc,WACX,SAACC,EAAA,EAAM,WACH,SAACvB,EAAA,EAAO,SAGhB,SAACwB,EAAA,EAAY,CAACC,QAASpB,EAAMqB,UAAS,qBAAgBvB,EAAKwB,WAAU,eAEzE,UAACN,EAAA,GAAQ,YACL,SAACC,EAAA,EAAc,WACX,SAACC,EAAA,EAAM,WACH,SAACK,EAAA,EAAO,SAGhB,SAACJ,EAAA,EAAY,CAACC,QAAO,UAAKtB,EAAK0B,SAAQ,KAAKH,UAAU,iBAE1D,UAACL,EAAA,GAAQ,YACL,SAACC,EAAA,EAAc,WACX,SAACC,EAAA,EAAM,WACH,SAACO,EAAA,EAAG,SAGZ,SAACN,EAAA,EAAY,CAACC,QAAO,UAAKrB,EAAK2B,MAAK,OAAOL,UAAU,yBAUzF,EChCA,EAnCgB,WACZ,OAAsCM,EAAAA,EAAAA,UAAS,MAAK,eAA7CC,EAAW,KAAEC,EAAc,KAClC,GAAsBF,EAAAA,EAAAA,UAAS,MAAK,eAA7BG,EAAG,KAAEC,EAAM,KAClB,GAAsCJ,EAAAA,EAAAA,UAAS,oBAAmB,eAA3DK,EAAW,KAAEC,EAAc,KAU5BC,EAAU,yCAAG,4GACRC,MAAM,uDAAD,OAAwDL,EAAIM,SAAQ,gBAAQN,EAAIO,UAAS,kBCpBrF,mCDoBsG,kBACjHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GACFZ,EAAeY,EACnB,IAAGC,OAAM,SAACC,GAAC,OAAKC,QAAQC,IAAIF,EAAE,KAAC,2CACtC,kBANe,mCAiBhB,OAVAG,EAAAA,EAAAA,YAAU,WAfFC,UAAUC,YACVD,UAAUC,YAAYC,oBAAmB,SAACC,GACtCnB,EAAOmB,EAASC,OACpB,IAEAlB,EAAe,uCAYvB,GAAG,KACHa,EAAAA,EAAAA,YAAU,WACFhB,IACAG,EAAe,mBACfC,IAGR,GAAG,CAACJ,IACW,OAARA,GAAgC,OAAhBF,GAAuB,SAAC,EAAM,CAACpD,MAAOwD,KACzD,SAAC,GAAc,UAAKJ,GAE5B,C","sources":["common/Loader.jsx","features/weather/WeatherIcon.jsx","features/weather/WeatherWidgets.jsx","features/weather/Weather.jsx","config/openweather.js"],"sourcesContent":["import { Box, CircularProgress, Typography } from '@mui/material';\nimport React from 'react';\n\nconst Loader = ({ label }) => {\n    return (\n        <Box sx={{ flexGrow: 1, p: 2, textAlign: \"center\" }}>\n            <CircularProgress color=\"primary\" />\n            <Typography variant=\"body1\" gutterBottom>\n                {label}\n            </Typography>\n        </Box>\n    );\n}\n\nexport default Loader;\n","import React from 'react';\nimport { AcUnit, Cloud, Umbrella, WbSunny } from '@mui/icons-material';\n\nconst WeatherIcon = ({ name }) => {\n    const caseInsensitiveName = name.toLowerCase();\n    if (caseInsensitiveName.search(\"cloud\") > -1) {\n        return <Cloud color=\"primary\" fontSize='large' />\n    }\n    if (caseInsensitiveName.search(\"rain\") > -1) {\n        return <Umbrella color=\"primary\" fontSize='large' />\n    }\n    if (caseInsensitiveName.search(\"snow\") > -1) {\n        return <AcUnit color=\"primary\" fontSize='large' />\n    }\n    return <WbSunny color=\"primary\" fontSize='large' />\n}\n\nexport default WeatherIcon;\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { Typography } from '@mui/material';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport { Air, Opacity, WbSunny } from '@mui/icons-material';\nimport WeatherIcon from './WeatherIcon';\n\nconst WeatherWidgets = ({name,sys,weather,main, wind}) => {\n    const temp = main ? `${main.temp}°C` : \"\"\n\n    return (\n        <Box sx={{ flexGrow: 1, p: 4 }}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={4}>\n                    <Paper elevation={3} variant=\"outlined\">\n                        <Box sx={{ flexGrow: 1, p: 2, textAlign: \"center\" }}>\n                            <Typography variant=\"h4\" gutterBottom component=\"div\">\n                                {name},{sys.country}\n                            </Typography>\n                            <Box sx={{ flexGrow: 1, p: 4 }}>\n                                <Typography variant=\"h5\" gutterBottom component=\"div\">\n                                    {weather[0].description}\n                                </Typography>\n                                <WeatherIcon name={weather[0].main} />\n                                <Typography variant=\"h5\" gutterBottom component=\"div\">\n                                    {temp}\n                                </Typography>\n                            </Box>\n                        </Box>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                    <Paper elevation={3} variant=\"outlined\" >\n                        <Box sx={{ flexGrow: 1, p: 2 }}>\n                            <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar>\n                                            <WbSunny />\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={temp} secondary={`Feels like ${main.feels_like}°C`} />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar>\n                                            <Opacity />\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={`${main.humidity}%`} secondary=\"Humidity\" />\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar>\n                                            <Air />\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={`${wind.speed}m/s`} secondary=\"Wind\" />\n                                </ListItem>\n                            </List>\n\n                        </Box>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}\n\nexport default WeatherWidgets;\n","import React, { useEffect, useState } from 'react';\nimport { API_KEY } from '../../config/openweather';\n\nimport Loader from '../../common/Loader';\nimport WeatherWidgets from './WeatherWidgets';\n\nconst Weather = () => {\n    const [weatherData, setweatherData] = useState(null);\n    const [pos, setPos] = useState(null);\n    const [loaderLabel, setLoaderLabel] = useState(\"Getting location\");\n    const getLocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                setPos(position.coords);\n            });\n        } else {\n            setLoaderLabel(\"Please allow location to see weather\");\n        }\n    }\n    const getWeather = async () => {\n        return fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${pos.latitude}&lon=${pos.longitude}&appid=${API_KEY}&units=metric`)\n            .then(response => response.json())\n            .then(data => {\n                setweatherData(data);\n            }).catch((e) => console.log(e));\n    }\n    useEffect(() => {\n        getLocation();\n    }, []);\n    useEffect(() => {\n        if (pos) {\n            setLoaderLabel(\"Getting weather\");\n            getWeather();\n        }\n        // eslint-disable-next-line\n    }, [pos]);\n    return pos === null || weatherData === null ? <Loader label={loaderLabel} /> : (\n        <WeatherWidgets {...weatherData}/>\n    );\n}\n\nexport default Weather;\n","export const API_KEY =  \"fd26fa84170da6ba612a200c1f56cf61\";"],"names":["label","Box","sx","flexGrow","p","textAlign","CircularProgress","color","Typography","variant","gutterBottom","caseInsensitiveName","name","toLowerCase","search","Cloud","fontSize","Umbrella","AcUnit","WbSunny","sys","weather","main","wind","temp","Grid","container","spacing","item","xs","md","Paper","elevation","component","country","description","List","width","maxWidth","bgcolor","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","feels_like","Opacity","humidity","Air","speed","useState","weatherData","setweatherData","pos","setPos","loaderLabel","setLoaderLabel","getWeather","fetch","latitude","longitude","then","response","json","data","catch","e","console","log","useEffect","navigator","geolocation","getCurrentPosition","position","coords"],"sourceRoot":""}