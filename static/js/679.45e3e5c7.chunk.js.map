{"version":3,"file":"static/js/679.45e3e5c7.chunk.js","mappings":"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","sources":["features/brandcompare/Brand.jsx","features/brandcompare/HelpModal.jsx","utils/analytics.js","features/brandcompare/BrandCompare.jsx"],"sourcesContent":["import { Grid, Paper, TextField } from '@mui/material'\nimport React, { useCallback } from 'react'\nexport default function Brand({ id, brand,\n    weightUnits,\n    price,\n    onUpdate,\n    pricePerUnit\n}) {\n    const sendPayload = useCallback((attr, value) => {\n        const payload = { weightUnits, price, id, pricePerUnit, brand };\n        onUpdate({ ...payload, [attr]: value });\n    }, [weightUnits, price, id, pricePerUnit, onUpdate, brand])\n\n    return (\n\n        <Paper elevation={2} sx={{ p: 4, m: 1 }}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <TextField fullWidth id=\"inpBrand\" label=\"Brand\" placeholder=\"Eg: Unilever\" variant=\"standard\" value={brand} onChange={(evt) => sendPayload('brand', evt.currentTarget.value)} />\n\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField fullWidth type=\"number\" id=\"inpWeightUnits\" label=\"Weight Units\" variant=\"standard\" value={weightUnits} onChange={(evt) => sendPayload('weightUnits', evt.currentTarget.value)} />\n\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField fullWidth type=\"number\" id=\"inpPrice\" label=\"Price\" variant=\"standard\" value={price} onChange={(evt) => sendPayload('price', evt.currentTarget.value)} />\n\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField fullWidth type=\"number\" id=\"inpPricePerUnit\" label=\"Price per unit\" variant=\"filled\" contentEditable={false} value={pricePerUnit} />\n\n                </Grid>\n            </Grid>\n        </Paper >\n\n\n    )\n}\n//  <Stack\n//       component=\"form\"\n//       sx={{\n//         width: '25ch',\n//       }}\n//       spacing={2}\n//       noValidate\n//       autoComplete=\"off\"\n//     >","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Typography from '@mui/material/Typography';\n\nexport const BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuiDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\n\n\nexport const BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nexport default function HelpModal({open, handleClose}) {\n \n  return (\n    <div>\n     \n      <BootstrapDialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         How to use?\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            This can calculate price per unit of a brand and add more brands using add button. It can be usefull while having 2 brands where calculating value for money is difficult while on a super market. Eg: Unilever Product costs 19 for 135 grams and Palmolive costs 27.5 for 175 grams, which one is worthy?\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose}>\n            Close\n          </Button>\n        </DialogActions>\n      </BootstrapDialog>\n    </div>\n  );\n}\n","export class Analytics {\n    static ENV = process.env.NODE_ENV\n    static PUSH(data) {\n        if (window.dataLayer) {\n            window.dataLayer.push({ ...data, environment: this.ENV });\n        } else {\n            console.log(\"No datalayer configured\")\n        }\n    }\n}","import { Box, Fab, Grid, Snackbar, Typography } from '@mui/material'\nimport React, { useCallback } from 'react'\nimport Brand from './Brand';\nimport AddIcon from '@mui/icons-material/Add';\nimport HelpModal from './HelpModal';\nimport QuestionMarkIcon from '@mui/icons-material/QuestionMark';\nimport { Sort } from '@mui/icons-material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { add, selectBrands, sort, update } from './brandSlice';\nimport { Analytics } from '../../utils/analytics';\n\nconst fabStyle = {\n    position: 'fixed',\n    bottom: 20,\n    right: 16,\n};\n\nfunction BrandCompare() {\n    const brands = useSelector(selectBrands);\n    const dispatch = useDispatch();\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = useCallback(() => {\n        setOpen(true);\n        Analytics.PUSH({ event: 'help_open' })\n    }, []);\n    const [openSnack, setOpenSnack] = React.useState(false);\n\n    const doOpenSnack = useCallback(() => {\n        setOpenSnack(true);\n    }, [setOpenSnack]);\n\n    const handleCloseSnack = useCallback((event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenSnack(false);\n    }, [setOpenSnack]);\n\n    const handleClose = useCallback(() => {\n        setOpen(false);\n    }, []);\n    const onUpdate = useCallback((payload) => {\n        dispatch(update(payload))\n    }, [dispatch])\n    const addBrand = useCallback(\n        () => {\n            dispatch(add())\n            Analytics.PUSH({ event: 'add_brands' })\n        },\n        [dispatch],\n    )\n    const sortBrand = useCallback(\n        () => {\n            dispatch(sort());\n            Analytics.PUSH({ event: 'sort_brands', brands })\n            doOpenSnack();\n        },\n        [dispatch, doOpenSnack, brands],\n    )\n\n\n    return (\n        <Box sx={{ flexGrow: 1, p: 4, position: 'relative' }}>\n            <Typography variant=\"h5\" gutterBottom component=\"div\">\n                Brand Price comparing tool\n            </Typography>\n            <Grid container spacing={2}>\n                {brands.map((brnd) => <Grid item xs={12} md={4} lg={3} key={brnd.id}> <Brand  {...brnd} onUpdate={onUpdate} /></Grid>)}\n\n            </Grid>\n            <HelpModal open={open} handleClose={handleClose} />\n            <Snackbar\n                open={openSnack}\n                autoHideDuration={3000}\n                onClose={handleCloseSnack}\n                message=\"Sorted (Lower price is on top now!!)\"\n            />\n            <Box sx={{ '& > :not(style)': { m: 1 }, ...fabStyle }}>\n                <Fab color=\"secondary\" aria-label=\"add\" onClick={handleClickOpen}>\n                    <QuestionMarkIcon />\n\n                </Fab>\n                <Fab color=\"primary\" aria-label=\"add\" onClick={sortBrand}>\n                    <Sort />\n                </Fab>\n                <Fab color=\"primary\" aria-label=\"add\" onClick={addBrand}>\n                    <AddIcon />\n                </Fab>\n            </Box>\n        </Box >\n    )\n}\n\nexport default BrandCompare;"],"names":["Brand","id","brand","weightUnits","price","onUpdate","pricePerUnit","sendPayload","useCallback","attr","value","payload","Paper","elevation","sx","p","m","Grid","container","spacing","item","xs","TextField","fullWidth","label","placeholder","variant","onChange","evt","currentTarget","type","contentEditable","BootstrapDialog","styled","Dialog","theme","padding","BootstrapDialogTitle","props","children","onClose","other","DialogTitle","IconButton","onClick","position","right","top","color","palette","grey","Close","HelpModal","open","handleClose","DialogContent","dividers","Typography","gutterBottom","DialogActions","Button","autoFocus","Analytics","data","window","dataLayer","push","environment","this","ENV","console","log","process","fabStyle","bottom","brands","useSelector","selectBrands","dispatch","useDispatch","React","setOpen","handleClickOpen","PUSH","event","openSnack","setOpenSnack","doOpenSnack","handleCloseSnack","reason","update","addBrand","add","sortBrand","sort","Box","flexGrow","component","map","brnd","md","lg","Snackbar","autoHideDuration","message","Fab","QuestionMark","Sort","Add"],"sourceRoot":""}